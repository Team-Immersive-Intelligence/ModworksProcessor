plugins {
    id 'java'
    id 'maven-publish'
}

group = 'pl.pabilo8'
version = '1.1.2'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.google.code.gson:gson:2.10.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc5'
    compileOnly 'com.google.auto.service:auto-service:1.0-rc5'
    implementation 'com.google.testing.compile:compile-testing:0.21.0'
}

def customGradle = rootProject.file('custom.gradle')
if (customGradle.exists()) {
    apply from: customGradle
}

tasks.register('signJar') {
    group 'signing'

    outputs.upToDateWhen {false}

    doLast {
        def signdir  = new File("$buildDir/libs")
        signdir.mkdirs()
        ant.signjar(
                destDir: "${signdir.absolutePath}",
                jar: "${signdir.absolutePath}/*.jar",
                alias: project.ksalias ?: System.getenv("SIGN_ALIAS"),
                storetype: "jks",
                keystore: project.keystore ?: System.getenv("SIGN_KEYSTORE"),
                storepass: project.storepass ?: System.getenv("SIGN_STOREPASS"),
                keypass: project.keypass ?: System.getenv("SIGN_KEYPASS"),
                verbose: true,
                preservelastmodified: "true",
                tsaurl: project.timestamp_url ?: System.getenv("SIGN_TIMESTAMP")
        )
    }
}

tasks.build.finalizedBy() {
    signJar
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name "iiMavenReleases"
            credentials {
                username = project.iiMavenReleasesUsername ?: System.getenv("iiMavenReleasesUsername")
                password = project.iiMavenReleasesPassword ?: System.getenv("iiMavenReleasesPassword")
            }
            authentication {
                basic(BasicAuthentication)
            }
            url "https://maven.iiteam.net/releases"
        }
    }
    publications {
        ModworksProcessor(MavenPublication) {
            from(components.java)

            groupId group
            artifactId "modworks-processor"
            version version

            pom {
                name = 'Modworks Processor'
                description = 'Code and Resources generation for Minecraft mods'
            }
        }
    }
}